# -*- coding: utf-8 -*-
# Dependências Python para transcritor-pdf

# --- Core LLM / Langchain ---
# Langchain para orquestração
langchain

# Cliente OpenAI usado por Langchain para endpoints compatíveis (OpenRouter)
openai

# Para carregar a API Key do arquivo .env
python-dotenv

# --- Pré-processamento (Adicionar quando necessário) ---
# docling-core # (?) Verificar nome exato no PyPI - Para análise de layout de documento
# pillow # Para manipulação básica de imagens, se necessário

# --- Manipulação de PDF (Adicionar quando necessário) ---
# pypdfium2 # Alternativa moderna e rápida para PyPDF2/PyMuPDF

# --- Acesso direto Gemini API (Se Langchain/OpenRouter não for suficiente) ---
# google-generativeai
# --- Manipulação de PDF ---
pypdfium2 # Biblioteca moderna para manipulação de PDF (extrair páginas/imagens)
# --- Preprocessing ---
Pillow # For image manipulation (might be needed for preprocessing steps)
# docling-core # (?) Check PyPI name - For document layout analysis (Add when implementing)
scikit-image # For advanced image processing (CLAHE, Sauvola binarization, Median filter, etc.)
# Langchain specific integrations (add as needed)
langchain-openai # For OpenAI models (Chat, Embeddings) via Langchain
# --- Vector Store / Database ---
psycopg2-binary # PostgreSQL adapter for Python (for pgvector interaction)
# langchain-postgres # Langchain integration for pgvector (Consider adding later)
# --- Testing ---
pytest # Framework for running tests